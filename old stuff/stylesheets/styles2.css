body {
  margin: 0;
  padding: 0;
  font-family: "Open Sans", "Oswald", Arial, sans-serif;
  text-align: center;
  font-size: 16px;
  background: #F8F8FF;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: "Cormorant Garamond", 'Times New Roman', Times, serif;
}

.background {
  background: url("../images/background.jpg");
  background-color: #cccccc;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
  position: fixed;
  top: 0;
  left: 0;
  z-index: -1;
  height: 100vh;
  width: 100vw;
}

input:not([type=submit]),
textarea,
select {
  width: 80%;
  padding: 12px 20px;
  margin: 8px 0;
  display: inline-block;
  border: 1px solid #ccc;
  border-radius: 4px;
  box-sizing: border-box;
}

input[type=checkbox] {
  width: 40px;
  text-align: left;
}

.half-width {
  width: 35%;
  margin-left: 5%;
  margin-right: 5%;
  display: inline-block;
}

.decline {
  box-shadow: inset 0px 0px 0px 7px #a84d10;
  background-color: white;
  color: black;
  transition: 0.5s border, 0.5s background-color, 0.5s color;
}

.decline:hover {
  background-color: #f26649;
  border: 1px solid #f26649;
}

.decline-selected,
.decline-selected:hover {
  border: 1px solid #a84d10;
  background-color: #a84d10;
  color: white;
  transition: 0.5s border, 0.5s background-color, 0.5s color;
}

.accept {
  /* border: 4px solid #a9c398; */
  box-shadow: inset 0px 0px 0px 7px #a9c398;
  background-color: white;
  color: black;
  transition: 0.5s border, 0.5s background-color, 0.5s color;
}

.accept-selected {
  color: white;
  transition: 0.5s border, 0.5s background-color, 0.5s color;
}

.accept:hover,
.accept-selected,
.accept-selected:hover {
  background-color: #b0bc22;
  border: 1px solid #b0bc22;
}

.reasoning {
  animation: grow 0.5s;
  transition: max-height 0.5s, transform 0.5s;
  transform-origin: top;
  max-height: 100vh;
}

@keyframes grow {
  0% {
    max-height: 0;
    transform: scaleY(0);
  }

  100% {
    max-height: 100vh;
    transform: scaleY(1);
  }
}

/*

uncomment this for annoying glows

input:not([type=submit]):focus,
textarea:focus,
select:focus {
  animation: glow 0.5s;
  box-shadow: blue 0px 0px 5px;
}

@keyframes glow {
  0% {
    box-shadow: blue 0px 0px 100px;
  }
  100% {
    box-shadow: blue 0px 0px 5px;
  }
}

*/

input[type=submit],
button,
.btn {
  background-color: #003e7e;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  transition: background-color 0.5s;
  margin-bottom: 5vh;
  margin-top: 5vh;
  padding: 20px;
  width: 80%;
}

input[type=submit]:hover,
button:hover,
.btn:hover {
  background-color: #00a5d9;
}

a {
  color: #00a5d9;
}

input[type=submit]:disabled,
button:disabled,
.btn:disabled {
  background: #cccccc;
  background-color: #cccccc;
  cursor: not-allowed;
}

input {
  font-size: 16px;
}

option[value],
select {
  width: 80%;
  padding: 10px 20px;
}

/*
  My awkward workaround.
  div:not(.background, .topnav, ...) isn't supported in CSS 3.
*/
div:not(.background):not(.topnav):not(.autocomplete-items) {
  border-radius: 5px;
}

div {
  padding: 20px;
}

.progress,
.progress-bar {
  padding: 0;
  margin-bottom: 0;
}

.progress {
  box-shadow: black 0px 2px 3px;
  width: 80%;
  margin: auto;
}

.progress-bar {
  animation: fill-bar 3s ease-in-out, colors 5s infinite alternate linear;
}

.autocomplete-items {
  position: relative;
  border-bottom: none;
  border-top: none;
  border-radius: 0px;
  top: -8px;
  z-index: 99;
  padding: 0;
  margin: auto;
}

.autocomplete-items div {
  padding: 10px;
  cursor: pointer;
  background-color: #fff;
  width: 80%;
  margin: auto;
}

.autocomplete-items div:hover {
  background-color: #e9e9e9;
}

.autocomplete-active {
  background-color: #00a5d9 !important;
  color: #ffffff;
}

.autocomplete {
  /*the container must be positioned relative:*/
  position: relative;
  display: inline-block;
}

.buttonHolder {
  background-color: #e7e1d5;
}

.sequenceButton {
  background-color: #f58426;
  border: 1px solid black;
}

.loButton {
  background-color: #f58426;
  border: 1px solid black;
}

.dragTarget {
	border: 1px solid #000000;
}

@keyframes colors {
  0% {
    background-color: #003e7e;
  }

  100% {
    background-color: rgb(245, 132, 38);
  }
}

@keyframes fill-bar {
  0% {
    width: 0px;
  }
}

.container {
  margin-top: 5vh;
  margin-bottom: 5vh;
  padding-top: 2vh;
  padding-bottom: 2vh;
  color: black;
  background-color: rgba(255, 255, 255, 0.6);
  /**
  Someday I want to implement this. HOWEVER,
  There's a bug with Chrome 73 that, when a backdrop filter
  is used on a container, and then a modal pops up on the page,
  the modal's backdrop ends up appearing BEHIND the modal dialog,
  making modals unusable.

  This same bug also appears in Edge 44 and the Safari bundled with
  iOS 12.3 Public beta 3.

  backdrop-filter: blur(3px) brightness(150%);
  -webkit-backdrop-filter: blur(3px) brightness(150%);
  */
}

.container-fluid {
  background-color: rgba(255, 255, 255, 0.6);
  color: black;
  margin-left: 4vh;
  margin-right: 4vh;
}

form,
.content {
  width: 80%;
  margin: auto;
  margin-top: 20px;
  margin-bottom: 20px;
  padding: 20px;
  color: black;
  background: rgba(216, 217, 218, 0.4);
  border-radius: 10px;
}

fieldset {
  margin-bottom: 5vh;
}

.can-shrink {
  animation: grow 0.5s;
  transform-origin: top;
  transition: transform 0.5s, max-height 0.5s, margin-bottom 0.5s, margin-top 0.5s;
}

.failure {
  animation: grow 0.5s;
  background: rgb(242, 102, 73);
  border: 1px solid rgb(168, 77, 16);
  color: white;
}

@keyframes grow {
  0% {
    transform: scaleY(0);
  }

  100% {
    transform: scaleY(1);
  }
}

.success {
  animation: grow 0.5s;
  border: 1px solid rgb(176, 188, 34);
  background-color: rgb(169, 195, 152);
  color: black;
}

.close {
  position: absolute;
  top: 5%;
  right: 1%;
  width: auto;
  margin: auto;
}

.close:hover {
  color: rgb(0, 0, 0);
  background-color: transparent;
}

.failure,
.success {
  transition: transform 0.5s, max-height 0.5s, margin-top 0.5s, margin-bottom 0.5s, padding 0.5s, border 0.5s;
  position: relative;
  transform-origin: top;
  /* groan */
}

label {
  display: block;
}

.topnav {
  overflow: hidden;
  background-color: rgba(245, 132, 38, 0.8);
  position: fixed;
  width: 100vw;
  display: block;
  z-index: 999;
  white-space: nowrap;
  backdrop-filter: blur(5px);
  -webkit-backdrop-filter: blur(5px);
}

.topnav a {
  color: #f2f2f2;
  text-align: center;
  padding: 14px 16px;
  text-decoration: none;
  font-size: 17px;
  transition: background-color 0.25s, color 0.25s;
  border-radius: 5px;
}

.topnav a:hover {
  background-color: rgb(253, 185, 36);
  color: black;
}

.topnav .hamburger {
  display: none;
  visibility: hidden;
}

table {
  width: 100%;
}

tr,
td,
table {
  border: 1px solid black;
}

th {
  text-align: center;
}

.list-table, 
.list-table>tbody>tr  {
  border: 0 ;
}

.list-table>tbody>tr>th {
  border-right: 1px solid black;
}

.list-table>tbody>tr>td {
  border: 0;
  border-top: 1px solid #ddd;
}

.table-header {
  padding-bottom: 20px;
}

.np-logo {
  display: block;
  background-color: transparent;
  width: 20vw;
  padding: 0;
  height: auto;
  backdrop-filter: none;
  -webkit-backdrop-filter: none;
}

.modal-footer {
  text-align: center;
}

.modal-backdrop.in {
  opacity: 0.8;
  filter: alpha(opacity=80);
}

.modal-backdrop {
  background-color: black;
  background: radial-gradient(transparent, black);
  /**
    The bug doesn't happen if I use it on the modal's backdrop,
    so I can go ham here lmao
  */
  backdrop-filter: grayscale(100%) blur(5px);
  -webkit-backdrop-filter: grayscale(100%) blur(5px);
}

.modal .close {
  position: relative;
}

.shrink {
  max-height: 0;
  transform: scaleY(0);
  margin-top: 0;
  margin-bottom: 0;
  padding: 0;
  border: 0px solid black;
}

@media only screen and (max-width: 768px) {
  form {
    width: 100%;
  }

  .topnav a {
    display: block;
  }

  .topnav a:not(.hamburger) {
    height: 0px;
    visibility: hidden;
    transition: height 0.5s, padding 0.5s, background-color 0.25s, color 0.25s, opacity 0.25s;
    padding: 0;
    opacity: 0;
  }

  .topnav.expanded a:not(.hamburger) {
    height: 52px;
    padding: 14px 16px;
    visibility: visible;
    opacity: 1;
  }

  .topnav .hamburger {
    display: block;
    visibility: visible;
  }

  .np-logo {
    width: 40%;
    margin-top: 10vh;
    margin-bottom: 10vh;
  }
}